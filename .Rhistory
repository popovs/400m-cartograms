for (i in fishing_years) {
#print(year)
dfname <- paste("map", i, sep="")
map_years[[dfname]] <- data.frame(merge(world, i, by="NAME", all=TRUE))
}
for (i in fishing_years) {
#print(year)
dfname <- paste("map", i, sep="")
map_years[[dfname]] <- merge(world, i, by="NAME", all=TRUE)
}
for (i in fishing_years) {
#print(year)
dfname <- paste("map", i, sep="")
[[dfname]] <- merge(world, i, by="NAME", all=TRUE)
}
paste0("wan", "goose")
paste("wan", "goose")
year <- 1950
fishing_year <- get(paste0("c", year), fishing_years)
dfname <- paste0("map", year)
map_years[[dfname]] <- merge(world, i, by="NAME", all=TRUE)
map_years <- list()
for (year in years) {
print(year)
fishing_year <- get(paste0("c", year), fishing_years) # get c<year> from the fishing_years list of df's, so we can merge
dfname <- paste0("map", year)
map_years[[dfname]] <- merge(world, i, by="NAME", all=TRUE)
}
View(map_years[["map1950"]])
test1950 <- map_years[["map1950"]]
carto1950 <- cartogram(map1950, "CATCH", itermax=5)
carto1950 <- cartogram(test1950, "CATCH", itermax=5)
warnings()
plot(carto1950, main="carto1950")
map_years[["map1950"@data$CATCH]]
map_years[[map1950@data$CATCH]]
test1970 <- fishing_data[fishing_data$Year==1970,]
test1990 <- fishing_data[fishing_data$Year==1990,]
list(test1970, test1990)
testlist <- list(test1970, test1990)
rm(testlist)
map_years[[is.na(map_years[])]] <- 0
0
map_years[is.na(map_years[[]])] <- 0
map_years[is.na(map_years[])] <- 0
map_years[is.na(map_years[*])] <- 0
year
map_years(year)
map_years[year]
map_years[is.na(map_years] <- 0
}
# Fill NAs with 0s
map1950$CATCH[is.na(map1950$CATCH)] <- 0
# Now fill all values < 1 with 1 so cartogram actually works (otherwise countries with zeros will just be missing)
map1950$CATCH[map1950$CATCH < 1] <- 1
# Now make the cartogram! FYI this will take FOREVER. Each iteration takes ~1 minute.
test1950 <- map_years[["map1950"]]
carto1950 <- cartogram(test1950, "CATCH", itermax=5)
map_years[is.na(map_years)] <- 0
map_years[["map1950"]]@data$CATCH
map_years[is.na(map_years[["map1950"]]@data$CATCH)] <- 0
is.na(map_years[["map1950"]]@data$CATCH)
map_years[["map1950"]]@data$CATCH
is.na(map_years[["map1951"]]@data$CATCH)
is.na(map_years[["map1951"]]@data$CATCH) <- 0
is.na(map_years[["map1951"]]@data$CATCH)
map_years[is.na(map_years[["map1951"]]@data$CATCH)] <- 0
is.na(map_years[["map1951"]]@data$CATCH)
map_years[[is.na(map_years[["map1951"]]@data$CATCH)]] <- 0
map_years[[is.na(map_years[["map1951"]]@data$CATCH)]]@data$CATCH <- 0
map_years[["map1951"]]@data$CATCH
head(map_years[[['CATCH']]])
head(map_years[['CATCH']])
head(map_years[[data$CATCH]])
map_years@data$CATCH
map_years[[]]@data$CATCH
map_years[@data$CATCH
map_years[]@data$CATCH
is.na(map_years[["map1950"]]@data$CATCH)
is.na(map_years[["map1951"]]@data$CATCH)
map_years[["map1951"]][is.na(map_years[["map1951"]]@data$CATCH)]
map_years["map1951"][is.na(map_years[["map1951"]]@data$CATCH)]
head(map_years["map1951"][is.na(map_years[["map1951"]]@data$CATCH)])
map_years[["map1951"@data]][is.na(map_years[["map1951"]]@data$CATCH)]
map_years[["map1951"]]@data
map_years[["map1951"]]@data[is.na(map_years[["map1951"]]@data$CATCH)]
library(tidyr)
tidyr::replace_na(map_years[[1951]]@data$CATCH, list(CATCH=0))
tidyr::replace_na(map_years[["map1951"]]@data$CATCH, list(CATCH=0))
map_years <- list()
for (year in years) {
#print(year)
fishing_year <- get(paste0("c", year), fishing_years) # get c<year> from the fishing_years list of df's, so we can merge
dfname <- paste0("map", year) # create spdf names in the form "map<year>"
map_years[[dfname]] <- merge(world, i, by="NAME", all=TRUE) # merge world dataset w each year within fishing_years list
#map_years[is.na(map_years[["map1950"]]@data$CATCH)] <- 0
}
View(test1950)
test1950$CATCH[is.na(test1950$CATCH)] <- 0
map_years <- list()
for (year in years) {
#print(year)
fishing_year <- get(paste0("c", year), fishing_years) # get c<year> from the fishing_years list of df's, so we can merge
dfname <- paste0("map", year) # create spdf names in the form "map<year>"
map_years[[dfname]] <- merge(world, i, by="NAME", all=TRUE) # merge world dataset w each year within fishing_years list
dfname$CATCH[is.na(dfname$CATCH)] <- 0
#map_years[is.na(map_years[["map1950"]]@data$CATCH)] <- 0
}
map_years <- list()
for (year in years) {
#print(year)
fishing_year <- get(paste0("c", year), fishing_years) # get c<year> from the fishing_years list of df's, so we can merge
dfname <- paste0("map", year) # create spdf names in the form "map<year>"
map_years[[dfname]] <- merge(world, i, by="NAME", all=TRUE) # merge world dataset w each year within fishing_years list
#dfname$CATCH[is.na(dfname$CATCH)] <- 0
#map_years[is.na(map_years[["map1950"]]@data$CATCH)] <- 0
}
is.na(map_years[["map1951"]]@data$CATCH)
is.na(map_years[["map1951"]]@data$CATCH) <- 0
is.na(map_years[["map1951"]]@data$CATCH)
map_years[["map1951"]]@data$CATCH
map_years[["map1950"]]@data[is.na(map_years[["map1950"]]@data$CATCH)] <- 0
for (1:2 in years) {
print year
}
for (year in years) {
print year
}
for (year in years) {
print year
}
for (year in years) {
print(year)
}
years <- list(c("1950","1970","1990","2014")) # shorten years for test loop
years <- unique(fishing_data$YEAR) # List containing all the years
years <- list(c("1950","1970","1990","2014")) # shorten years for test loop
years <- list("1950","1970","1990","2014") # shorten years for test loop
carto_maps <- list()
for (year in years) {
print(year)
}
years <- list("map1950","map1970","map1990","map2014") # shorten years for test loop
for (year in years) {
print(year)
dfname <- paste0
rm(dfname) # remove the floaters
rm(year)
}
years <- list("1950","1970","1990","2014") # shorten years for test loop
for (year in years) {
print(year)
dfname <- paste0("carto",year)
map_year <- get(paste0("map", year), map_years)
rm(dfname) # remove the floaters
rm(year)
}
years <- list("1950","1970","1990","2014") # shorten years for test loop
carto_maps <- list()
for (year in years) {
#print(year)
dfname <- paste0("carto",year)
map_year <- get(paste0("map", year), map_years)
#rm(dfname) # remove the floaters
#rm(year)
}
years <- 1970
for (year in years) {
print(year)
dfname <- paste0("carto",year)
map_year <- get(paste0("map", year), map_years)
#rm(dfname) # remove the floaters
#rm(year)
}
View(fising_years[c1970])
View(fishing_years[c1970])
View(fishing_years["c1970"])
is.na(map_years[["map1950"]]@data$CATCH)
map_years[["map1950"]]@data$CATCH[is.na(map_years[["map1950"]]@data$CATCH)] <- 0
is.na(map_years[["map1950"]]@data$CATCH)
map_years <- list()
for (year in years) {
#print(year)
fishing_year <- get(paste0("c", year), fishing_years) # get c<year> from the fishing_years list of df's, so we can merge
dfname <- paste0("map", year) # create spdf names in the form "map<year>"
map_years[[dfname]] <- merge(world, i, by="NAME", all=TRUE) # merge world dataset w each year within fishing_years list
map_years[[dfname]]@data$CATCH[is.na(map_years[[dfname]]@data$CATCH)] <- 0
rm(dfname) # remove the floaters
rm(year)
}
years <- unique(fishing_data$YEAR) # List containing all the years
for (year in years) {
#print(year)
fishing_year <- get(paste0("c", year), fishing_years) # get c<year> from the fishing_years list of df's, so we can merge
dfname <- paste0("map", year) # create spdf names in the form "map<year>"
map_years[[dfname]] <- merge(world, i, by="NAME", all=TRUE) # merge world dataset w each year within fishing_years list
map_years[[dfname]]@data$CATCH[is.na(map_years[[dfname]]@data$CATCH)] <- 0
rm(dfname) # remove the floaters
rm(year)
}
map_years <- list()
for (year in years) {
#print(year)
fishing_year <- get(paste0("c", year), fishing_years) # get c<year> from the fishing_years list of df's, so we can merge
dfname <- paste0("map", year) # create spdf names in the form "map<year>"
map_years[[dfname]] <- merge(world, i, by="NAME", all=TRUE) # merge world dataset w each year within fishing_years list
map_years[[dfname]]@data$CATCH[is.na(map_years[[dfname]]@data$CATCH)] <- 0
rm(dfname) # remove the floaters
rm(year)
}
years2 <- 1970
for (year in years2) {
print(year)
dfname <- paste0("carto",year)
map_year <- get(paste0("map", year), map_years)
#rm(dfname) # remove the floaters
#rm(year)
}
View(map_years[[dfname]])
dfname
View(map_year <- get(paste0("map", year), map_years))
View(map_year <- get(paste0("map1970"), map_years))
View(map_year[["map1970"]])
View(map_years[["map1970"]])
View(map_years[["map1950"]])
View(map_years)
for (year in years) {
#print(year)
fishing_year <- get(paste0("c", year), fishing_years) # get c<year> from the fishing_years list of df's, so we can merge
dfname <- paste0("map", year) # create spdf names in the form "map<year>"
paste(dfname)
#map_years[[dfname]] <- merge(world, i, by="NAME", all=TRUE) # merge world dataset w each year within fishing_years list
#map_years[[dfname]]@data$CATCH[is.na(map_years[[dfname]]@data$CATCH)] <- 0 # Fill NAs with 0s, otherwise any countries w NA just won't show up in the cartogram
#rm(dfname) # remove the floaters
#rm(year)
}
for (year in years) {
#print(year)
fishing_year <- get(paste0("c", year), fishing_years) # get c<year> from the fishing_years list of df's, so we can merge
dfname <- paste0("map", year) # create spdf names in the form "map<year>"
print(dfname)
#map_years[[dfname]] <- merge(world, i, by="NAME", all=TRUE) # merge world dataset w each year within fishing_years list
#map_years[[dfname]]@data$CATCH[is.na(map_years[[dfname]]@data$CATCH)] <- 0 # Fill NAs with 0s, otherwise any countries w NA just won't show up in the cartogram
#rm(dfname) # remove the floaters
#rm(year)
}
map_years <- list()
for (year in years) {
#print(year)
fishing_year <- get(paste0("c", year), fishing_years) # get c<year> from the fishing_years list of df's, so we can merge
dfname <- paste0("map", year) # create spdf names in the form "map<year>"
print(dfname)
map_years[[dfname]] <- merge(world, fishing_year, by="NAME", all=TRUE) # merge world dataset w each year within fishing_years list
map_years[[dfname]]@data$CATCH[is.na(map_years[[dfname]]@data$CATCH)] <- 0 # Fill NAs with 0s, otherwise any countries w NA just won't show up in the cartogram
#rm(dfname) # remove the floaters
#rm(year)
}
map_years[["map1970"]]
View(map_years[["map1970"]])
for (year in years2) {
print(year)
dfname <- paste0("carto",year)
map_year <- get(paste0("map", year), map_years)
#rm(dfname) # remove the floaters
#rm(year)
}
map_years <- list()
for (year in years) {
#print(year)
fishing_year <- get(paste0("c", year), fishing_years) # get c<year> from the fishing_years list of df's, so we can merge
dfname <- paste0("map", year) # create spdf names in the form "map<year>"
print(dfname)
map_years[[dfname]] <- merge(world, fishing_year, by="NAME", all=TRUE) # merge world dataset w each year within fishing_years list
map_years[[dfname]]@data$CATCH[is.na(map_years[[dfname]]@data$CATCH)] <- 0 # Fill NAs with 0s, otherwise any countries w NA just won't show up in the cartogram
rm(dfname) # remove the floaters
rm(year)
}
years2 <- 1950, 1970
years2 <- (1950, 1970)
years2 <- list("1950","1970","1990","2014") # shorten years for test loop
carto_maps <- list()
for (year in years2) {
print(year)
dfname <- paste0("carto",year)
map_year <- get(paste0("map", year), map_years)
#rm(dfname) # remove the floaters
#rm(year)
}
for (year in years2) {
dfname <- paste0("carto",year)
print(dfname)
map_year <- get(paste0("map", year), map_years)
#rm(dfname) # remove the floaters
#rm(year)
}
for (year in years2) {
dfname <- paste0("carto",year)
map_year <- get(paste0("map", year), map_years)
carto_maps[[dfname]] <- map_year
#rm(dfname) # remove the floaters
#rm(year)
}
View(map_year)
years2 <- list("1950","1970","1990","2014") # shorten years for test loop
carto_maps <- list()
sys.time()
Sys.time()
print(Sys.time())
print("Finished", dfname, Sys.time())
print("Finishied", dfname)
print("Finished")
print(paste("Finished", dfname, Sys.time()))
print(paste("Finished", dfname, "at" Sys.time()))
print(paste("Finished", dfname, "at", Sys.time()))
years2 <- list("1950","1970","1990","2014") # shorten years for test loop
carto_maps <- list()
for (year in years2) {
dfname <- paste0("carto",year)
map_year <- get(paste0("map", year), map_years)
carto_maps[[dfname]] <- cartogram(map_year, "CATCH", itermax=1)
plot(carto_maps[[dfname]], main="dfname")
print(paste("Finished", dfname, "at", Sys.time()))
#rm(dfname) # remove the floaters
#rm(year)
}
for (year in years2) {
dfname <- paste0("carto",year)
map_year <- get(paste0("map", year), map_years)
carto_maps[[dfname]] <- cartogram(map_year, "CATCH", itermax=1)
plot(carto_maps[[dfname]], main=dfname)
print(paste("Finished", dfname, "at", Sys.time()))
#rm(dfname) # remove the floaters
#rm(year)
}
print(year)
years <- unique(fishing_data$YEAR) # List containing all the years
for (year in years[1:10]){
print(year)
}
for (year in years[c(1950, 1970, 1990, 2014)]){
print(year)
}
for (year in years[c("1950", "1970", "1990", "2014")]){
print(year)
}
years[c(1990)]
years
for (year in years[c(1,5,10)]){
print(year)
}
writeOGR(obj = cartomaps[[dfname]], dsn = "Shapefiles", layer = dfname, driver = "ESRI Shapefile")
writeOGR(obj = carto_maps[[dfname]], dsn = "Shapefiles", layer = dfname, driver = "ESRI Shapefile")
years <- unique(fishing_data$YEAR) # List containing all the years
rm(year)
rm(years2)
carto_maps <- list()
rm(carto1950)
plot(world)
plot(world, main="World")
for (year in years) {
dfname <- paste0("carto",year)
map_year <- get(paste0("map", year), map_years)
carto_maps[[dfname]] <- cartogram(map_year, "CATCH", itermax=50)
plot(carto_maps[[dfname]], main=dfname)
print(paste("Finished", dfname, "at", Sys.time()))
writeOGR(obj = carto_maps[[dfname]], dsn = "Shapefiles", layer = dfname, driver = "ESRI Shapefile") # Save shapefile
#rm(dfname) # remove the floaters
#rm(year)
}
carto_maps <- list()
for (year in years) {
dfname <- paste0("carto",year)
map_year <- get(paste0("map", year), map_years)
carto_maps[[dfname]] <- cartogram(map_year, "CATCH", itermax=50)
plot(carto_maps[[dfname]], main=dfname)
print(paste("Finished", dfname, "at", Sys.time()))
writeOGR(obj = carto_maps[[dfname]], dsn = "Shapefiles", layer = dfname, driver = "ESRI Shapefile") # Save shapefile
#rm(dfname) # remove the floaters
#rm(year)
}
for (year in years) {
dfname <- paste0("carto",year)
map_year <- get(paste0("map", year), map_years)
carto_maps[[dfname]] <- cartogram(map_year, "CATCH", itermax=50)
plot(carto_maps[[dfname]], main=dfname)
print(paste("Finished", dfname, "at", Sys.time()))
writeOGR(obj = carto_maps[[dfname]], dsn = "Shapefiles", layer = dfname, driver = "ESRI Shapefile", overwrite_layer=TRUE) # Save shapefile, overwrite old ones if necessary
#rm(dfname) # remove the floaters
#rm(year)
}
carto_maps <- list()
dfname <- paste0("carto",year)
map_year <- get(paste0("map", year), map_years)
map_year <- get(paste0("map", year), map_years)
View(map_year)
carto_maps[[dfname]] <- cartogram(map_year, "CATCH", itermax=5)
plot(carto_maps[[dfname]], main=dfname)
carto_maps <- list()
for (year in years[1:2]) {
print(year)
dfname <- paste0("carto",year)
map_year <- get(paste0("map", year), map_years)
carto_maps[[dfname]] <- cartogram(map_year, "CATCH", itermax=50)
plot(carto_maps[[dfname]], main=dfname)
print(paste("Finished", dfname, "at", Sys.time()))
writeOGR(obj = carto_maps[[dfname]], dsn = "Shapefiles", layer = dfname, driver = "ESRI Shapefile", overwrite_layer=TRUE) # Save shapefile, overwrite old ones if necessary, otherwise this forever code ABORTS when it was supposed to be running OVERNIGHT -_-
#rm(dfname) # remove the floaters
#rm(year)
}
map_years[[dfname]]@data$CATCH[map_years[[dfname]]@data$CATCH < 1]
dfname <- paste0("map", year) # create spdf names in the form "map<year>"
map_years[[dfname]]@data$CATCH[map_years[[dfname]]@data$CATCH < 1]
map_years <- list()
for (year in years) {
#print(year)
fishing_year <- get(paste0("c", year), fishing_years) # get c<year> from the fishing_years list of df's, so we can merge
dfname <- paste0("map", year) # create spdf names in the form "map<year>"
#print(dfname)
map_years[[dfname]] <- merge(world, fishing_year, by="NAME", all=TRUE) # merge world dataset w each year within fishing_years list
map_years[[dfname]]@data$CATCH[is.na(map_years[[dfname]]@data$CATCH)] <- 0 # Fill NAs with 0s, otherwise any countries w NA just won't show up in the cartogram
map_years[[dfname]]@data$CATCH[map_years[[dfname]]@data$CATCH < 1] <- 1 # Fill 0s with 1s so cartogram actually works
rm(dfname) # remove the floaters
rm(year)
}
carto_maps <- list()
rm(i)
rm(test1970)
rm(test1990)
rm(world2)
rm(wrld_simpl)
for (year in years[1:2]) {
print(year)
dfname <- paste0("carto",year)
map_year <- get(paste0("map", year), map_years)
carto_maps[[dfname]] <- cartogram(map_year, "CATCH", itermax=50)
plot(carto_maps[[dfname]], main=dfname)
print(paste("Finished", dfname, "at", Sys.time()))
writeOGR(obj = carto_maps[[dfname]], dsn = "Shapefiles", layer = dfname, driver = "ESRI Shapefile", overwrite_layer=TRUE) # Save shapefile, overwrite old ones if necessary, otherwise this forever code ABORTS when it was supposed to be running OVERNIGHT -_-
#rm(dfname) # remove the floaters
#rm(year)
}
years{2:}
years[2:]
years[2:end]
years[-2
years[-2]
years[-2,]
years[-2:]
years[2:65]
for (year in years[2:65]) {
print(year)
dfname <- paste0("carto",year)
map_year <- get(paste0("map", year), map_years)
carto_maps[[dfname]] <- cartogram(map_year, "CATCH", itermax=50)
plot(carto_maps[[dfname]], main=dfname)
print(paste("Finished", dfname, "at", Sys.time()))
writeOGR(obj = carto_maps[[dfname]], dsn = "Shapefiles", layer = dfname, driver = "ESRI Shapefile", overwrite_layer=TRUE) # Save shapefile, overwrite old ones if necessary, otherwise this forever code ABORTS when it was supposed to be running OVERNIGHT -_-
#rm(dfname) # remove the floaters
#rm(year)
}
warnings()
for (year in years[2:65]) {
print(year)
dfname <- paste0("carto",year)
map_year <- get(paste0("map", year), map_years)
carto_maps[[dfname]] <- cartogram(map_year, "CATCH", itermax=50)
plot(carto_maps[[dfname]], main=dfname)
print(paste("Finished", dfname, "at", Sys.time()))
writeOGR(obj = carto_maps[[dfname]], dsn = "Shapefiles", layer = dfname, driver = "ESRI Shapefile", overwrite_layer=TRUE) # Save shapefile, overwrite old ones if necessary, otherwise this forever code ABORTS when it was supposed to be running OVERNIGHT -_-
#rm(dfname) # remove the floaters
#rm(year)
}
fishtogram <- function(year) {
print(year)
dfname <- paste0("carto",year)
map_year <- get(paste0("map", year), map_years)
carto_maps[[dfname]] <<- cartogram(map_year, "CATCH") # USE ONE ITERATION FOR TESTING
plot(carto_maps[[dfname]], main=dfname)
print(paste("Finished", dfname, "at", Sys.time()))
writeOGR(obj = carto_maps[[dfname]], dsn = "Shapefiles", layer = dfname, driver = "ESRI Shapefile", overwrite_layer=TRUE) # Save shapefile
}
fishtogram(1970)
fishtogram(2014)
fishtogram(1990)
fishtogram(1996)
fishtogram(1950)
fishtogram(1970)
save.image("~/GIS/Deng/400m-cartograms/Rworkspace.RData")
maps(world)
map(world)
countries <- map_data("world")
countries
plot(countries)
p1950 <- ggplot() +
# countries
geom_polygon(data = countries, aes(
#fill = Catch,
x = long,
y = lat,
group = group
)
) +
# constrain proportions
coord_fixed() +
# countries outlines
geom_path(data = countries, aes(
x = long,
y = lat,
group = group),
color = "white", size = 0.01
)
plot(p1950)
